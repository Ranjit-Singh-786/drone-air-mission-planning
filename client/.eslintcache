[{"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\index.js":"1","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\App.js":"2","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\reportWebVitals.js":"3","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\Home.jsx":"4","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\map\\Map.jsx":"5","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\nav\\Nav.jsx":"6","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\map\\CreatePlan.jsx":"7","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\map\\Util.jsx":"8","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\reducers\\rootReducer.js":"9","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\reducers\\plans.js":"10","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\actions\\action-types\\createPlan.js":"11","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\containers\\map\\CreatePlan.jsx":"12","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\actions\\actions\\createPlan.js":"13","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\map\\UtilMap.jsx":"14","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\containers\\map\\ViewPlans.jsx":"15","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\map\\ViewPlans.jsx":"16","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\Button.jsx":"17","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\map\\Test.jsx":"18","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\index.js":"19","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\App.js":"20","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\reportWebVitals.js":"21","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\reducers\\rootReducer.js":"22","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\reducers\\plans.js":"23","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\components\\Home.jsx":"24","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\components\\nav\\Nav.jsx":"25","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\components\\map\\Test.jsx":"26","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\containers\\map\\CreatePlan.jsx":"27","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\containers\\map\\ViewPlans.jsx":"28","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\actions\\action-types\\createPlan.js":"29","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\actions\\actions\\createPlan.js":"30","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\components\\Button.jsx":"31","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\components\\map\\UtilMap.jsx":"32","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\components\\map\\CreatePlan.jsx":"33","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\components\\map\\ViewPlans.jsx":"34","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\components\\map\\Util.jsx":"35","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\components\\map\\static.js":"36"},{"size":783,"mtime":1611403526617,"results":"37","hashOfConfig":"38"},{"size":738,"mtime":1612207133723,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":499162500000,"results":"40","hashOfConfig":"38"},{"size":1083,"mtime":1611502710601,"results":"41","hashOfConfig":"38"},{"size":267,"mtime":1611339566668,"results":"42","hashOfConfig":"38"},{"size":684,"mtime":1612207087676,"results":"43","hashOfConfig":"38"},{"size":4803,"mtime":1611549416056,"results":"44","hashOfConfig":"38"},{"size":5096,"mtime":1611421707953,"results":"45","hashOfConfig":"38"},{"size":137,"mtime":1611403369905,"results":"46","hashOfConfig":"38"},{"size":903,"mtime":1611420806366,"results":"47","hashOfConfig":"38"},{"size":39,"mtime":1611403830795,"results":"48","hashOfConfig":"38"},{"size":460,"mtime":1611404911215,"results":"49","hashOfConfig":"38"},{"size":212,"mtime":1611404931481,"results":"50","hashOfConfig":"38"},{"size":1484,"mtime":1611464723289,"results":"51","hashOfConfig":"38"},{"size":236,"mtime":1611461013657,"results":"52","hashOfConfig":"38"},{"size":5064,"mtime":1611465678561,"results":"53","hashOfConfig":"38"},{"size":185,"mtime":1611502037585,"results":"54","hashOfConfig":"38"},{"size":1953,"mtime":1612211370346,"results":"55","hashOfConfig":"38"},{"size":808,"mtime":1612217674635,"results":"56","hashOfConfig":"57"},{"size":770,"mtime":1612217674539,"results":"58","hashOfConfig":"57"},{"size":375,"mtime":1612217674644,"results":"59","hashOfConfig":"57"},{"size":137,"mtime":1612217674643,"results":"60","hashOfConfig":"57"},{"size":903,"mtime":1612217674639,"results":"61","hashOfConfig":"57"},{"size":1083,"mtime":1612217674555,"results":"62","hashOfConfig":"57"},{"size":768,"mtime":1612323008869,"results":"63","hashOfConfig":"57"},{"size":2192,"mtime":1612275119623,"results":"64","hashOfConfig":"57"},{"size":460,"mtime":1612217674628,"results":"65","hashOfConfig":"57"},{"size":236,"mtime":1612217674633,"results":"66","hashOfConfig":"57"},{"size":39,"mtime":1612217674545,"results":"67","hashOfConfig":"57"},{"size":212,"mtime":1612217674549,"results":"68","hashOfConfig":"57"},{"size":185,"mtime":1612217674554,"results":"69","hashOfConfig":"57"},{"size":1484,"mtime":1612217674611,"results":"70","hashOfConfig":"57"},{"size":4915,"mtime":1612323608148,"results":"71","hashOfConfig":"57"},{"size":5223,"mtime":1612292620460,"results":"72","hashOfConfig":"57"},{"size":5096,"mtime":1612217674608,"results":"73","hashOfConfig":"57"},{"size":2649,"mtime":1612290625023,"results":"74","hashOfConfig":"57"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"h2p1lr",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"77"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"77"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},"t3qla3",{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"117"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"117"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"117"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"117"},"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\index.js",[],["155","156"],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\App.js",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\reportWebVitals.js",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\Home.jsx",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\map\\Map.jsx",[],["157","158"],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\nav\\Nav.jsx",["159"],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\map\\CreatePlan.jsx",["160","161"],"import React,{useEffect} from 'react'\r\nimport { useState } from 'react';\r\nimport ReactMapGL from 'react-map-gl';\r\nimport {GeolocateControl,FullscreenControl,NavigationControl} from \"react-map-gl\";\r\nimport {Marker} from \"react-map-gl\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport AddLocationIcon from '@material-ui/icons/AddLocation';\r\nimport GetSelectedOperation from \"./Util\";\r\nimport GetCurrentFeature from \"./UtilMap\"\r\n\r\nconst useStyles = makeStyles({\r\n    operationContainer:{\r\n        position:\"absolute\",\r\n        top:0,\r\n        left:0,\r\n        backgroundColor:\"white\",\r\n        color:\"black\",\r\n        margin:5,\r\n        padding:5,\r\n        width:\"300px\",\r\n        height:300,\r\n        zIndex:1000,\r\n        boxShadow:'0px 0px 30px lightgreen',\r\n        border:\"4px solid lightgreen\"\r\n    },\r\n    label:{\r\n        padding:5\r\n    }\r\n})\r\nfunction CreatePlan(props) {\r\n    const {store,addSource} = props;\r\n    const [viewport, setViewport] = useState({\r\n      width: \"100%\",\r\n      height: 500,\r\n      latitude: 26.127565,\r\n      longitude: 85.420509,\r\n      zoom: 8\r\n    });\r\n\r\n    const [operation, setOperation] = useState(\"select\");\r\n    const [clickedLngLat, setClickedLngLat] = useState(null);\r\n    const [curData, setCurData] = useState(null);\r\n    const [tmpData, setTmpData] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        if(curData){\r\n            addSource(curData,operation)\r\n        }\r\n    },[curData]);\r\n    return (\r\n        <div className=\"root-container\">\r\n            <ReactMapGL\r\n                onClick={(e)=>{\r\n                    setClickedLngLat(e.lngLat);\r\n                }}\r\n                {...viewport}\r\n                onViewportChange={nextViewport => setViewport(nextViewport)}\r\n                mapboxApiAccessToken={process.env.REACT_APP_MAP_BOX_TOKEN}\r\n                mapStyle={\"mapbox://styles/rafilos556/ckhrp0auk0ol119s02qvctvh4\"}\r\n            >\r\n                \r\n                <div style={{position: 'absolute', right: 10,bottom:10}}>\r\n                    <GeolocateControl />\r\n                    <FullscreenControl />\r\n                    <NavigationControl />\r\n                </div>\r\n\r\n                {/* display current longitude and latitude */}\r\n                <div style={{position: 'absolute', left: 10,bottom:30,padding:5,backgroundColor:\"white\",color:\"black\"}}>\r\n                    <b>lng: </b>{viewport.longitude} <br/>\r\n                    <b>lat: </b>{viewport.latitude}\r\n                </div>\r\n\r\n                {\r\n                    (clickedLngLat)&&\r\n                    <Marker offsetLeft={-20} offsetTop={-25} longitude={clickedLngLat[0]} latitude={clickedLngLat[1]}>\r\n                        <AddLocationIcon className=\"add_location_icon\" color=\"secondary\"/>\r\n                    </Marker>\r\n                }\r\n                <GetCurrentFeature operation={operation} data={tmpData}/>\r\n            </ReactMapGL>\r\n            \r\n            <Operations \r\n                operation={operation} \r\n                getOperation={setOperation}\r\n                flushData={(e)=>{\r\n                    setTmpData(null);\r\n                    setCurData(null);\r\n                    setClickedLngLat(null)\r\n                }}\r\n                mapProps={{\r\n                    clickedLngLat:clickedLngLat,\r\n                    setClickedLngLat:setClickedLngLat,\r\n                    setCurData:setCurData,\r\n                    curData:curData,\r\n                    tmpData:tmpData,\r\n                    setTmpData:setTmpData\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Operations=({getOperation,operation,mapProps,flushData})=>{\r\n    const classes = useStyles();\r\n    return <Card className={classes.operationContainer}>\r\n        <FormControl >\r\n        <InputLabel className={`${classes.label}`}>Add</InputLabel>\r\n        <Select \r\n            value={operation}\r\n            onChange={(e)=>{\r\n                getOperation(e.target.value);\r\n                flushData();\r\n            }} \r\n        >\r\n            <MenuItem value=\"select\">Select</MenuItem>\r\n            <MenuItem value=\"line\">Line</MenuItem>\r\n            <MenuItem value=\"point\">Point</MenuItem>\r\n            <MenuItem value=\"circle\">Circle</MenuItem>\r\n            <MenuItem value=\"polygon\">Polygon</MenuItem>\r\n        </Select>\r\n    </FormControl>\r\n    <hr/>\r\n    {operation === \"select\" && <p className=\"muted__text\">Please select any operation</p>}\r\n\r\n        <GetSelectedOperation operation={operation} mapProps={mapProps}/>\r\n    </Card>\r\n}\r\nexport default CreatePlan\r\n","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\map\\Util.jsx",["162"],"import React,{useEffect} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles({\r\n    addButton:{\r\n        position:\"absolute\",\r\n        bottom:4,\r\n        left:4\r\n    },\r\n    uploadButton:{\r\n        position:\"absolute\",\r\n        bottom:4,\r\n        right:4\r\n    }\r\n});\r\nconst GetSelectedOperation=({operation,mapProps})=>{\r\n    switch(operation){\r\n        case \"point\":\r\n            return <PointOperation mapProps={mapProps}/>;\r\n\r\n        case 'line':\r\n            return <LineOperation mapProps={mapProps}/>;\r\n            \r\n        case 'circle':\r\n            return <CircleOperation mapProps={mapProps}/>;\r\n        default : return null;\r\n    }\r\n}\r\n\r\nconst CircleOperation=({mapProps})=>{\r\n    const classes = useStyles();\r\n    const [radius, setRadius] = React.useState(20);\r\n    useEffect(()=>{\r\n        if(mapProps && mapProps.clickedLngLat){\r\n            mapProps.setTmpData({\r\n                cords:mapProps.clickedLngLat,\r\n                radius:radius\r\n            });\r\n        }\r\n    },[mapProps.clickedLngLat,radius]);\r\n\r\n    return <div>\r\n        <p className=\"muted__text\">Click any where on the map to create add circle center point</p>\r\n        {\r\n            (mapProps&&mapProps.clickedLngLat)&&<>\r\n                <hr/>\r\n                <p>Your selected point</p>\r\n                <ul>\r\n                    <li>\r\n                        <b>Lon:</b> {mapProps.clickedLngLat[0]}\r\n                    </li>\r\n                    <li>\r\n                        <b>Lat:</b> {mapProps.clickedLngLat[1]}\r\n                    </li>\r\n                </ul>\r\n            </>\r\n        }\r\n        <div className=\"input_radius_container\">\r\n            <p>Radius</p>\r\n            <input \r\n                value={radius}\r\n                onChange={(e)=>setRadius(e.target.value)}\r\n                type=\"number\"\r\n                placeholder=\"radius in KM\"\r\n            />\r\n            <p>KM</p>\r\n        </div>\r\n        <Button variant=\"contained\" color=\"primary\" \r\n            size=\"small\" disabled={!mapProps||!mapProps.clickedLngLat}\r\n            className={classes.addButton}\r\n            onClick={(e)=>{\r\n                mapProps.setCurData({\r\n                    cords:mapProps.clickedLngLat,\r\n                    radius:radius\r\n                });\r\n                mapProps.setClickedLngLat(null);\r\n                mapProps.setTmpData(null);\r\n            }}\r\n            >\r\n            Add Circle \r\n        </Button>\r\n    </div>\r\n}\r\nconst LineOperation=({mapProps})=>{\r\n    const classes = useStyles();\r\n    return <div>\r\n        <p className=\"muted__text\">Click any where on the map to create add line point</p>\r\n\r\n        {\r\n            (mapProps&&mapProps.clickedLngLat)&&<>\r\n                <hr/>\r\n                <p>Your selected point</p>\r\n                <ul>\r\n                    <li>\r\n                        <b>Lon:</b> {mapProps.clickedLngLat[0]}\r\n                    </li>\r\n                    <li>\r\n                        <b>Lat:</b> {mapProps.clickedLngLat[1]}\r\n                    </li>\r\n                </ul>\r\n            </>\r\n        }\r\n        <Button variant=\"contained\" color=\"primary\" \r\n            size=\"small\" disabled={!mapProps||!mapProps.clickedLngLat}\r\n            className={classes.addButton}\r\n            onClick={(e)=>{\r\n                let data = mapProps.tmpData || [mapProps.clickedLngLat];\r\n                mapProps.setTmpData([...data,mapProps.clickedLngLat]);\r\n                mapProps.setClickedLngLat(null);\r\n            }}\r\n            >\r\n            Add point\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" \r\n            size=\"small\" disabled={!mapProps.tmpData}\r\n            className={classes.uploadButton}\r\n            onClick={(e)=>{\r\n                mapProps.setCurData(mapProps.tmpData);\r\n                mapProps.setClickedLngLat(null);\r\n                mapProps.setTmpData(null);\r\n            }}\r\n            >\r\n            Add Line \r\n        </Button>\r\n    </div>\r\n}\r\n\r\nconst PointOperation=({mapProps})=>{\r\n    const classes = useStyles();\r\n    return <div>\r\n        <p className=\"muted__text\">Click any where on the map to create point</p>\r\n\r\n        {\r\n            (mapProps&&mapProps.clickedLngLat)&&<>\r\n                <hr/>\r\n                <p>Your selected point</p>\r\n                <ul>\r\n                    <li>\r\n                        <b>Lon:</b> {mapProps.clickedLngLat[0]}\r\n                    </li>\r\n                    <li>\r\n                        <b>Lat:</b> {mapProps.clickedLngLat[1]}\r\n                    </li>\r\n                </ul>\r\n            </>\r\n        }\r\n        <Button variant=\"contained\" color=\"primary\" \r\n            size=\"small\" disabled={!mapProps||!mapProps.clickedLngLat}\r\n            className={classes.addButton}\r\n            onClick={(e)=>{\r\n                mapProps.setCurData(mapProps.clickedLngLat);\r\n                mapProps.setClickedLngLat(null);\r\n            }}\r\n            >\r\n            Add point\r\n        </Button>\r\n    </div>\r\n}\r\n\r\nexport default GetSelectedOperation;","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\reducers\\rootReducer.js",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\reducers\\plans.js",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\actions\\action-types\\createPlan.js",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\containers\\map\\CreatePlan.jsx",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\actions\\actions\\createPlan.js",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\map\\UtilMap.jsx",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\containers\\map\\ViewPlans.jsx",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\map\\ViewPlans.jsx",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\Button.jsx",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\map\\Test.jsx",["163","164","165"],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\index.js",[],["166","167"],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\App.js",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\reducers\\rootReducer.js",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\reducers\\plans.js",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\components\\Home.jsx",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\components\\nav\\Nav.jsx",["168","169"],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\components\\map\\Test.jsx",["170","171","172"],"import React,{useState,useEffect} from \"react\";\r\nimport ReactMapGL from 'react-map-gl';\r\nimport {GeolocateControl,FullscreenControl,NavigationControl} from \"react-map-gl\";\r\nimport {Marker} from \"react-map-gl\";\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport {Layers} from \"./UtilMap\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst ViewPlans=(props)=>{\r\n    const [viewport, setViewport] = useState({\r\n      width: \"100%\",\r\n      height: 500,\r\n      latitude: 26.127565,\r\n      longitude: 85.420509,\r\n      zoom: 8\r\n    });\r\n\r\n    const [lines, setLines] = useState([]);\r\n    useEffect(()=>{\r\n        const socket = io.connect(`http://localhost:${process.env.REACT_APP_IO_PORT || 5000}`);\r\n        socket.on(\"connect\",()=>{\r\n            socket.on(\"cords\",(data)=>{\r\n                console.log(data)\r\n            });\r\n            socket.on(\"hello\", (arg) => {\r\n                console.log(arg); // world\r\n            });\r\n            socket.emit(\"hello\",\"world\")\r\n        })\r\n    });\r\n    return <div className=\"root-container\">\r\n        <ReactMapGL\r\n            {...viewport}\r\n            onViewportChange={nextViewport => setViewport(nextViewport)}\r\n            mapboxApiAccessToken={process.env.REACT_APP_MAP_BOX_TOKEN}\r\n            mapStyle={\"mapbox://styles/rafilos556/ckhrp0auk0ol119s02qvctvh4\"}\r\n        >\r\n            <div style={{position: 'absolute', right: 10,bottom:10}}>\r\n                <GeolocateControl />\r\n                <FullscreenControl />\r\n                <NavigationControl />\r\n            </div>\r\n            \r\n            {/* display current longitude and latitude */}\r\n            <div style={{position: 'absolute', left: 10,bottom:30,padding:5,backgroundColor:\"white\",color:\"black\"}}>\r\n                <b>lng: </b>{viewport.longitude} <br/>\r\n                <b>lat: </b>{viewport.latitude}\r\n            </div>\r\n            \r\n\r\n            {/* display lines */}\r\n            {\r\n                lines.map((line,idx)=>{\r\n                        return <Layers.Line key={`view-plan-line-${idx}`} cords={line.cords} id={`view-plan-line-${idx}`} />\r\n                })\r\n            }\r\n\r\n        </ReactMapGL>\r\n    </div>\r\n}\r\n\r\nexport default ViewPlans;","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\containers\\map\\CreatePlan.jsx",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\containers\\map\\ViewPlans.jsx",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\actions\\action-types\\createPlan.js",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\actions\\actions\\createPlan.js",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\components\\Button.jsx",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\components\\map\\UtilMap.jsx",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\components\\map\\CreatePlan.jsx",["173","174"],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\components\\map\\ViewPlans.jsx",["175"],"import React,{useState} from \"react\";\r\nimport ReactMapGL from 'react-map-gl';\r\nimport {GeolocateControl,FullscreenControl,NavigationControl} from \"react-map-gl\";\r\nimport {Marker} from \"react-map-gl\";\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport {Layers} from \"./UtilMap\";\r\nimport Card from '@material-ui/core/Card';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport staticData from \"./static\";\r\n\r\nconst useStyles = makeStyles({\r\n    operationContainer:{\r\n        position:\"absolute\",\r\n        bottom:0,\r\n        right:0,\r\n        backgroundColor:\"white\",\r\n        color:\"black\",\r\n        margin:5,\r\n        padding:5,\r\n        width:\"200px\",\r\n        height:200,\r\n        zIndex:1000,\r\n        boxShadow:'0px 0px 30px lightgreen',\r\n        border:\"4px solid lightgreen\"\r\n    }\r\n})\r\nconst ViewPlans=({store})=>{\r\n    const [viewport, setViewport] = useState({\r\n      width: \"100%\",\r\n      height: 500,\r\n      latitude: 26.127565,\r\n      longitude: 85.420509,\r\n      zoom: 8\r\n    });\r\n\r\n    const [show, setShow] = useState({\r\n        points:true,lines:true,circles:true\r\n    })\r\n\r\n    let accessToken = localStorage.mapToken || process.env.REACT_APP_MAP_BOX_TOKEN;\r\n\r\n    return <div className=\"root-container\">\r\n        <ReactMapGL\r\n            {...viewport}\r\n            onViewportChange={nextViewport => setViewport(nextViewport)}\r\n            mapboxApiAccessToken={accessToken}\r\n            mapStyle={\"mapbox://styles/mapbox/streets-v11\"}\r\n        >\r\n            <div style={{position: 'absolute', right: 10,bottom:10}}>\r\n                <GeolocateControl />\r\n                <FullscreenControl />\r\n                <NavigationControl />\r\n            </div>\r\n            \r\n            {/* display current longitude and latitude */}\r\n            <div style={{position: 'absolute', left: 10,bottom:30,padding:5,backgroundColor:\"white\",color:\"black\"}}>\r\n                <b>lng: </b>{viewport.longitude} <br/>\r\n                <b>lat: </b>{viewport.latitude}\r\n            </div>\r\n            \r\n            {/* display ponints */}\r\n            {\r\n                show.points && store.points.map((point,idx)=>{\r\n                    return <Marker key={`view-plan-point-${idx}`}  offsetLeft={-20} offsetTop={-25} longitude={point[0]} latitude={point[1]}>\r\n                            <LocationOnIcon className=\"add_location_icon\" color=\"secondary\"/>\r\n                    </Marker>\r\n                })\r\n            }\r\n\r\n            {/* display lines */}\r\n            {\r\n                show.lines ? store.lines.map((line,idx)=>{\r\n                    return <Layers.Line key={`view-plan-line-${idx}`} cords={line} id={`view-plan-line-${idx}`} />\r\n                }):null\r\n            }\r\n\r\n            {/* display circles */}\r\n            {\r\n                show.circles && store.circles.map((circle,idx)=>{\r\n                    return <Layers.Circle cords={circle.cords} radius={circle.radius} id={`view-plan-circle-${idx}`} key={`view-plan-circle-${idx}`} />\r\n                })\r\n            }\r\n        </ReactMapGL>\r\n        <ShowLayers show={show} setShow={setShow} store={store} />\r\n    </div>\r\n}\r\n\r\nconst ShowLayers=({show,setShow,store})=>{\r\n    const classes = useStyles();\r\n    return <Card className={classes.operationContainer}>\r\n            <p className=\"muted__text p_margin\">Select the layers to display</p> <hr/>\r\n            <FormGroup>\r\n                <FormControlLabel\r\n                    control={<Checkbox checked={show.points} onChange={(e)=>{\r\n                        setShow({...show,points:!show.points})\r\n                    }} name=\"Points\" />}\r\n                    label=\"Points\"\r\n                />\r\n                <FormControlLabel\r\n                    control={<Checkbox checked={show.lines} onChange={(e)=>{\r\n                        setShow({...show,lines:!show.lines})\r\n                    }} name=\"Lines\" />}\r\n                    label=\"Lines\"\r\n                />\r\n                <FormControlLabel\r\n                    control={<Checkbox checked={show.circles} onChange={(e)=>{\r\n                        setShow({...show,circles:!show.circles})\r\n                    }} name=\"Circles\" />}\r\n                    label=\"Circles\"\r\n                />\r\n            </FormGroup>\r\n            \r\n      <Fab onClick={()=>{\r\n           const el = document.createElement('textarea');\r\n           el.value = JSON.stringify(store);\r\n           // we can use staticData(store), but it is freezing browser\r\n           el.setAttribute('readonly', '');\r\n           el.style.position = 'absolute';\r\n           el.style.left = '-9999px';\r\n           document.body.appendChild(el);\r\n           el.select();\r\n           document.execCommand('copy');\r\n           document.body.removeChild(el);\r\n        }} \r\n        color=\"primary\" aria-label=\"add\" variant=\"extended\" size=\"small\" >\r\n        <FileCopyIcon fontSize=\"small\"/>\r\n        Copy geojson Data\r\n      </Fab>\r\n    </Card>\r\n}\r\nexport default ViewPlans;","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\components\\map\\Util.jsx",["176"],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-air-mission-planning\\client\\src\\components\\map\\static.js",["177"],"const config = {\r\n    \"circleSteps\":50,\r\n    \"lineSignmentLength\":1\r\n};\r\nconst geoJsons = {\r\n    lines:[],\r\n    points:[],\r\n    polygons:[], // a circle can be made by polygons \r\n}\r\nconst {circle,point,lineString,lineChunk,along,distance} = require(\"@turf/turf\");\r\n\r\n/**\r\n * generate coordinates for circle.\r\n * @param {Array} center [longitude,latitude]\r\n * @param {Number} radius radius of cirlcle\r\n */\r\nconst circleToPolygon=(center,radius)=>{\r\n    const steps = config.circleSteps || 50;\r\n    const options = {steps: steps, units: 'kilometers',properties:{\r\n        madeUsing:\"Circle to polygon\"\r\n    }};\r\n    const circleCords = circle(center, radius, options);\r\n    return circleCords;\r\n}\r\n\r\n/**\r\n * get geojson for the coordinates.\r\n * @param {Array} center [longitude,latitude]\r\n */\r\nconst getPoint=(center)=>{\r\n    const pointGeoJson = point(center);\r\n    return pointGeoJson;\r\n}\r\n\r\nconst getLineChunksForLineString=(cords)=>{\r\n    let lineCords = [];\r\n    for(let i=0; i<cords.length-1; i++){\r\n        const lineChunk = getLineChunk(cords[i],cords[i+1]);\r\n        lineCords = [...lineCords,...lineChunk];\r\n    }\r\n    return lineString(lineCords);\r\n}\r\n\r\n/**\r\n * Get line chunks between two points\r\n * @param {Array} sp [lon,lat] start point of line sigment\r\n * @param {Arrat} ep [lon,lat] end point of the line sigment \r\n */\r\nconst getLineChunk=(sp,ep)=>{\r\n    const dist = parseInt(distance(point(sp),point(ep),{units:\"kilometers\"}))*1000;\r\n    let cp = sp; // current point\r\n\r\n    // distance between generated two points\r\n    let sigmentLength = dist/config.lineSignmentLength || dist/1;\r\n        sigmentLength = parseInt(sigmentLength);\r\n\r\n    const chunkCords = [sp];\r\n    for(let i=0; i<dist; i++){\r\n        const line = lineString([cp,ep]);\r\n\r\n        // new point\r\n        let np = along(line, sigmentLength, { units:\"kilometers\"});\r\n        chunkCords.push(np.geometry.coordinates);\r\n    }\r\n    chunkCords.push(ep);\r\n    return chunkCords;\r\n}\r\nexport default function generateData(staticInput){\r\n    //generate geojson polygon for each circle\r\n    staticInput.circles.forEach((circle,idx)=>{\r\n        const polygon = circleToPolygon(circle.cords,circle.radius);\r\n        geoJsons.polygons.push(polygon);\r\n    });\r\n\r\n    //generate geojson points\r\n    staticInput.points.forEach((pointInput,idx)=>{\r\n        const pointGeoJson = getPoint(pointInput);\r\n        geoJsons.points.push(pointGeoJson);\r\n    });\r\n\r\n    // generate lines\r\n    staticInput.lines.forEach((line,idx)=>{\r\n        const lineGeoJson = getLineChunksForLineString(line);\r\n        geoJsons.lines.push(lineGeoJson);\r\n    });\r\n\r\n    return JSON.stringify(geoJsons);\r\n}",{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"178","replacedBy":"182"},{"ruleId":"180","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":20,"column":13,"nodeType":"186","endLine":20,"endColumn":97},{"ruleId":"187","severity":1,"message":"188","line":36,"column":12,"nodeType":"189","messageId":"190","endLine":36,"endColumn":17},{"ruleId":"191","severity":1,"message":"192","line":54,"column":7,"nodeType":"193","endLine":54,"endColumn":16,"suggestions":"194"},{"ruleId":"191","severity":1,"message":"195","line":41,"column":7,"nodeType":"193","endLine":41,"endColumn":38,"suggestions":"196"},{"ruleId":"187","severity":1,"message":"197","line":4,"column":9,"nodeType":"189","messageId":"190","endLine":4,"endColumn":15},{"ruleId":"187","severity":1,"message":"198","line":5,"column":8,"nodeType":"189","messageId":"190","endLine":5,"endColumn":22},{"ruleId":"187","severity":1,"message":"199","line":18,"column":19,"nodeType":"189","messageId":"190","endLine":18,"endColumn":27},{"ruleId":"178","replacedBy":"200"},{"ruleId":"180","replacedBy":"201"},{"ruleId":"184","severity":1,"message":"185","line":17,"column":13,"nodeType":"186","endLine":17,"endColumn":113},{"ruleId":"184","severity":1,"message":"185","line":20,"column":13,"nodeType":"186","endLine":20,"endColumn":93},{"ruleId":"187","severity":1,"message":"197","line":4,"column":9,"nodeType":"189","messageId":"190","endLine":4,"endColumn":15},{"ruleId":"187","severity":1,"message":"198","line":5,"column":8,"nodeType":"189","messageId":"190","endLine":5,"endColumn":22},{"ruleId":"187","severity":1,"message":"199","line":18,"column":19,"nodeType":"189","messageId":"190","endLine":18,"endColumn":27},{"ruleId":"187","severity":1,"message":"188","line":40,"column":12,"nodeType":"189","messageId":"190","endLine":40,"endColumn":17},{"ruleId":"191","severity":1,"message":"192","line":58,"column":7,"nodeType":"193","endLine":58,"endColumn":16,"suggestions":"202"},{"ruleId":"187","severity":1,"message":"203","line":14,"column":8,"nodeType":"189","messageId":"190","endLine":14,"endColumn":18},{"ruleId":"191","severity":1,"message":"195","line":41,"column":7,"nodeType":"193","endLine":41,"endColumn":38,"suggestions":"204"},{"ruleId":"187","severity":1,"message":"205","line":10,"column":32,"nodeType":"189","messageId":"190","endLine":10,"endColumn":41},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],["206"],["207"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-unused-vars","'store' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addSource' and 'operation'. Either include them or remove the dependency array.","ArrayExpression",["208"],"React Hook useEffect has a missing dependency: 'mapProps'. Either include it or remove the dependency array.",["209"],"'Marker' is defined but never used.","'LocationOnIcon' is defined but never used.","'setLines' is assigned a value but never used.",["206"],["207"],["210"],"'staticData' is defined but never used.",["211"],"'lineChunk' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"212","fix":"216"},{"desc":"214","fix":"217"},"Update the dependencies array to be: [addSource, curData, operation]",{"range":"218","text":"219"},"Update the dependencies array to be: [mapProps, mapProps.clickedLngLat, radius]",{"range":"220","text":"221"},{"range":"222","text":"219"},{"range":"223","text":"221"},[1692,1701],"[addSource, curData, operation]",[1091,1122],"[mapProps, mapProps.clickedLngLat, radius]",[1819,1828],[1091,1122]]